package mnj.mfg.model.entities;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Jan 28 12:22:33 PKT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class LinesEOImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        DivisionId {
            public Object get(LinesEOImpl obj) {
                return obj.getDivisionId();
            }

            public void put(LinesEOImpl obj, Object value) {
                obj.setDivisionId((String)value);
            }
        }
        ,
        HeaderId {
            public Object get(LinesEOImpl obj) {
                return obj.getHeaderId();
            }

            public void put(LinesEOImpl obj, Object value) {
                obj.setHeaderId((Number)value);
            }
        }
        ,
        LineId {
            public Object get(LinesEOImpl obj) {
                return obj.getLineId();
            }

            public void put(LinesEOImpl obj, Object value) {
                obj.setLineId((Number)value);
            }
        }
        ,
        BuyerId {
            public Object get(LinesEOImpl obj) {
                return obj.getBuyerId();
            }

            public void put(LinesEOImpl obj, Object value) {
                obj.setBuyerId((Number)value);
            }
        }
        ,
        Season {
            public Object get(LinesEOImpl obj) {
                return obj.getSeason();
            }

            public void put(LinesEOImpl obj, Object value) {
                obj.setSeason((String)value);
            }
        }
        ,
        Brand {
            public Object get(LinesEOImpl obj) {
                return obj.getBrand();
            }

            public void put(LinesEOImpl obj, Object value) {
                obj.setBrand((String)value);
            }
        }
        ,
        StyleName {
            public Object get(LinesEOImpl obj) {
                return obj.getStyleName();
            }

            public void put(LinesEOImpl obj, Object value) {
                obj.setStyleName((String)value);
            }
        }
        ,
        MarkerPlanNumber {
            public Object get(LinesEOImpl obj) {
                return obj.getMarkerPlanNumber();
            }

            public void put(LinesEOImpl obj, Object value) {
                obj.setMarkerPlanNumber((String)value);
            }
        }
        ,
        MarkerId {
            public Object get(LinesEOImpl obj) {
                return obj.getMarkerId();
            }

            public void put(LinesEOImpl obj, Object value) {
                obj.setMarkerId((String)value);
            }
        }
        ,
        Color {
            public Object get(LinesEOImpl obj) {
                return obj.getColor();
            }

            public void put(LinesEOImpl obj, Object value) {
                obj.setColor((String)value);
            }
        }
        ,
        Yds {
            public Object get(LinesEOImpl obj) {
                return obj.getYds();
            }

            public void put(LinesEOImpl obj, Object value) {
                obj.setYds((String)value);
            }
        }
        ,
        Inch {
            public Object get(LinesEOImpl obj) {
                return obj.getInch();
            }

            public void put(LinesEOImpl obj, Object value) {
                obj.setInch((String)value);
            }
        }
        ,
        Meter {
            public Object get(LinesEOImpl obj) {
                return obj.getMeter();
            }

            public void put(LinesEOImpl obj, Object value) {
                obj.setMeter((Number)value);
            }
        }
        ,
        MarkerWidth {
            public Object get(LinesEOImpl obj) {
                return obj.getMarkerWidth();
            }

            public void put(LinesEOImpl obj, Object value) {
                obj.setMarkerWidth((String)value);
            }
        }
        ,
        FunctionalArea {
            public Object get(LinesEOImpl obj) {
                return obj.getFunctionalArea();
            }

            public void put(LinesEOImpl obj, Object value) {
                obj.setFunctionalArea((String)value);
            }
        }
        ,
        MarkerEfficiency {
            public Object get(LinesEOImpl obj) {
                return obj.getMarkerEfficiency();
            }

            public void put(LinesEOImpl obj, Object value) {
                obj.setMarkerEfficiency((String)value);
            }
        }
        ,
        ShrinkagePattern {
            public Object get(LinesEOImpl obj) {
                return obj.getShrinkagePattern();
            }

            public void put(LinesEOImpl obj, Object value) {
                obj.setShrinkagePattern((String)value);
            }
        }
        ,
        Remarks {
            public Object get(LinesEOImpl obj) {
                return obj.getRemarks();
            }

            public void put(LinesEOImpl obj, Object value) {
                obj.setRemarks((String)value);
            }
        }
        ,
        MarkerWidthMeter {
            public Object get(LinesEOImpl obj) {
                return obj.getMarkerWidthMeter();
            }

            public void put(LinesEOImpl obj, Object value) {
                obj.setMarkerWidthMeter((Number)value);
            }
        }
        ,
        MarkerAreaInch {
            public Object get(LinesEOImpl obj) {
                return obj.getMarkerAreaInch();
            }

            public void put(LinesEOImpl obj, Object value) {
                obj.setMarkerAreaInch((Number)value);
            }
        }
        ,
        Attribute15 {
            public Object get(LinesEOImpl obj) {
                return obj.getAttribute15();
            }

            public void put(LinesEOImpl obj, Object value) {
                obj.setAttribute15((String)value);
            }
        }
        ,
        Attribute14 {
            public Object get(LinesEOImpl obj) {
                return obj.getAttribute14();
            }

            public void put(LinesEOImpl obj, Object value) {
                obj.setAttribute14((String)value);
            }
        }
        ,
        Attribute13 {
            public Object get(LinesEOImpl obj) {
                return obj.getAttribute13();
            }

            public void put(LinesEOImpl obj, Object value) {
                obj.setAttribute13((String)value);
            }
        }
        ,
        Attribute12 {
            public Object get(LinesEOImpl obj) {
                return obj.getAttribute12();
            }

            public void put(LinesEOImpl obj, Object value) {
                obj.setAttribute12((String)value);
            }
        }
        ,
        Attribute11 {
            public Object get(LinesEOImpl obj) {
                return obj.getAttribute11();
            }

            public void put(LinesEOImpl obj, Object value) {
                obj.setAttribute11((String)value);
            }
        }
        ,
        Attribute10 {
            public Object get(LinesEOImpl obj) {
                return obj.getAttribute10();
            }

            public void put(LinesEOImpl obj, Object value) {
                obj.setAttribute10((String)value);
            }
        }
        ,
        Attribute9 {
            public Object get(LinesEOImpl obj) {
                return obj.getAttribute9();
            }

            public void put(LinesEOImpl obj, Object value) {
                obj.setAttribute9((String)value);
            }
        }
        ,
        Attribute8 {
            public Object get(LinesEOImpl obj) {
                return obj.getAttribute8();
            }

            public void put(LinesEOImpl obj, Object value) {
                obj.setAttribute8((String)value);
            }
        }
        ,
        Attribute6 {
            public Object get(LinesEOImpl obj) {
                return obj.getAttribute6();
            }

            public void put(LinesEOImpl obj, Object value) {
                obj.setAttribute6((String)value);
            }
        }
        ,
        Attribute7 {
            public Object get(LinesEOImpl obj) {
                return obj.getAttribute7();
            }

            public void put(LinesEOImpl obj, Object value) {
                obj.setAttribute7((String)value);
            }
        }
        ,
        Attribute5 {
            public Object get(LinesEOImpl obj) {
                return obj.getAttribute5();
            }

            public void put(LinesEOImpl obj, Object value) {
                obj.setAttribute5((String)value);
            }
        }
        ,
        Attribute3 {
            public Object get(LinesEOImpl obj) {
                return obj.getAttribute3();
            }

            public void put(LinesEOImpl obj, Object value) {
                obj.setAttribute3((String)value);
            }
        }
        ,
        Attribute4 {
            public Object get(LinesEOImpl obj) {
                return obj.getAttribute4();
            }

            public void put(LinesEOImpl obj, Object value) {
                obj.setAttribute4((String)value);
            }
        }
        ,
        Attribute2 {
            public Object get(LinesEOImpl obj) {
                return obj.getAttribute2();
            }

            public void put(LinesEOImpl obj, Object value) {
                obj.setAttribute2((String)value);
            }
        }
        ,
        Attribute1 {
            public Object get(LinesEOImpl obj) {
                return obj.getAttribute1();
            }

            public void put(LinesEOImpl obj, Object value) {
                obj.setAttribute1((String)value);
            }
        }
        ,
        PocId {
            public Object get(LinesEOImpl obj) {
                return obj.getPocId();
            }

            public void put(LinesEOImpl obj, Object value) {
                obj.setPocId((Number)value);
            }
        }
        ,
        BuyerName {
            public Object get(LinesEOImpl obj) {
                return obj.getBuyerName();
            }

            public void put(LinesEOImpl obj, Object value) {
                obj.setBuyerName((String)value);
            }
        }
        ,
        HeaderEO {
            public Object get(LinesEOImpl obj) {
                return obj.getHeaderEO();
            }

            public void put(LinesEOImpl obj, Object value) {
                obj.setHeaderEO((HeaderEOImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(LinesEOImpl object);

        public abstract void put(LinesEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int DIVISIONID = AttributesEnum.DivisionId.index();
    public static final int HEADERID = AttributesEnum.HeaderId.index();
    public static final int LINEID = AttributesEnum.LineId.index();
    public static final int BUYERID = AttributesEnum.BuyerId.index();
    public static final int SEASON = AttributesEnum.Season.index();
    public static final int BRAND = AttributesEnum.Brand.index();
    public static final int STYLENAME = AttributesEnum.StyleName.index();
    public static final int MARKERPLANNUMBER = AttributesEnum.MarkerPlanNumber.index();
    public static final int MARKERID = AttributesEnum.MarkerId.index();
    public static final int COLOR = AttributesEnum.Color.index();
    public static final int YDS = AttributesEnum.Yds.index();
    public static final int INCH = AttributesEnum.Inch.index();
    public static final int METER = AttributesEnum.Meter.index();
    public static final int MARKERWIDTH = AttributesEnum.MarkerWidth.index();
    public static final int FUNCTIONALAREA = AttributesEnum.FunctionalArea.index();
    public static final int MARKEREFFICIENCY = AttributesEnum.MarkerEfficiency.index();
    public static final int SHRINKAGEPATTERN = AttributesEnum.ShrinkagePattern.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int MARKERWIDTHMETER = AttributesEnum.MarkerWidthMeter.index();
    public static final int MARKERAREAINCH = AttributesEnum.MarkerAreaInch.index();
    public static final int ATTRIBUTE15 = AttributesEnum.Attribute15.index();
    public static final int ATTRIBUTE14 = AttributesEnum.Attribute14.index();
    public static final int ATTRIBUTE13 = AttributesEnum.Attribute13.index();
    public static final int ATTRIBUTE12 = AttributesEnum.Attribute12.index();
    public static final int ATTRIBUTE11 = AttributesEnum.Attribute11.index();
    public static final int ATTRIBUTE10 = AttributesEnum.Attribute10.index();
    public static final int ATTRIBUTE9 = AttributesEnum.Attribute9.index();
    public static final int ATTRIBUTE8 = AttributesEnum.Attribute8.index();
    public static final int ATTRIBUTE6 = AttributesEnum.Attribute6.index();
    public static final int ATTRIBUTE7 = AttributesEnum.Attribute7.index();
    public static final int ATTRIBUTE5 = AttributesEnum.Attribute5.index();
    public static final int ATTRIBUTE3 = AttributesEnum.Attribute3.index();
    public static final int ATTRIBUTE4 = AttributesEnum.Attribute4.index();
    public static final int ATTRIBUTE2 = AttributesEnum.Attribute2.index();
    public static final int ATTRIBUTE1 = AttributesEnum.Attribute1.index();
    public static final int POCID = AttributesEnum.PocId.index();
    public static final int BUYERNAME = AttributesEnum.BuyerName.index();
    public static final int HEADEREO = AttributesEnum.HeaderEO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public LinesEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("mnj.mfg.model.entities.LinesEO");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for DivisionId, using the alias name DivisionId.
     * @return the DivisionId
     */
    public String getDivisionId() {
        return (String)getAttributeInternal(DIVISIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DivisionId.
     * @param value value to set the DivisionId
     */
    public void setDivisionId(String value) {
        setAttributeInternal(DIVISIONID, value);
    }

    /**
     * Gets the attribute value for HeaderId, using the alias name HeaderId.
     * @return the HeaderId
     */
    public Number getHeaderId() {
        return (Number)getAttributeInternal(HEADERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HeaderId.
     * @param value value to set the HeaderId
     */
    public void setHeaderId(Number value) {
        setAttributeInternal(HEADERID, value);
    }

    /**
     * Gets the attribute value for LineId, using the alias name LineId.
     * @return the LineId
     */
    public Number getLineId() {
        return (Number)getAttributeInternal(LINEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for LineId.
     * @param value value to set the LineId
     */
    public void setLineId(Number value) {
        setAttributeInternal(LINEID, value);
    }

    /**
     * Gets the attribute value for BuyerId, using the alias name BuyerId.
     * @return the BuyerId
     */
    public Number getBuyerId() {
        return (Number)getAttributeInternal(BUYERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for BuyerId.
     * @param value value to set the BuyerId
     */
    public void setBuyerId(Number value) {
        setAttributeInternal(BUYERID, value);
    }

    /**
     * Gets the attribute value for Season, using the alias name Season.
     * @return the Season
     */
    public String getSeason() {
        return (String)getAttributeInternal(SEASON);
    }

    /**
     * Sets <code>value</code> as the attribute value for Season.
     * @param value value to set the Season
     */
    public void setSeason(String value) {
        setAttributeInternal(SEASON, value);
    }

    /**
     * Gets the attribute value for Brand, using the alias name Brand.
     * @return the Brand
     */
    public String getBrand() {
        return (String)getAttributeInternal(BRAND);
    }

    /**
     * Sets <code>value</code> as the attribute value for Brand.
     * @param value value to set the Brand
     */
    public void setBrand(String value) {
        setAttributeInternal(BRAND, value);
    }

    /**
     * Gets the attribute value for StyleName, using the alias name StyleName.
     * @return the StyleName
     */
    public String getStyleName() {
        return (String)getAttributeInternal(STYLENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for StyleName.
     * @param value value to set the StyleName
     */
    public void setStyleName(String value) {
        setAttributeInternal(STYLENAME, value);
    }

    /**
     * Gets the attribute value for MarkerPlanNumber, using the alias name MarkerPlanNumber.
     * @return the MarkerPlanNumber
     */
    public String getMarkerPlanNumber() {
        return (String)getAttributeInternal(MARKERPLANNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for MarkerPlanNumber.
     * @param value value to set the MarkerPlanNumber
     */
    public void setMarkerPlanNumber(String value) {
        setAttributeInternal(MARKERPLANNUMBER, value);
    }

    /**
     * Gets the attribute value for MarkerId, using the alias name MarkerId.
     * @return the MarkerId
     */
    public String getMarkerId() {
        return (String)getAttributeInternal(MARKERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for MarkerId.
     * @param value value to set the MarkerId
     */
    public void setMarkerId(String value) {
        setAttributeInternal(MARKERID, value);
    }

    /**
     * Gets the attribute value for Color, using the alias name Color.
     * @return the Color
     */
    public String getColor() {
        return (String)getAttributeInternal(COLOR);
    }

    /**
     * Sets <code>value</code> as the attribute value for Color.
     * @param value value to set the Color
     */
    public void setColor(String value) {
        setAttributeInternal(COLOR, value);
    }

    /**
     * Gets the attribute value for Yds, using the alias name Yds.
     * @return the Yds
     */
    public String getYds() {
        return (String)getAttributeInternal(YDS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Yds.
     * @param value value to set the Yds
     */
    public void setYds(String value) {
        setAttributeInternal(YDS, value);
    }

    /**
     * Gets the attribute value for Inch, using the alias name Inch.
     * @return the Inch
     */
    public String getInch() {
        return (String)getAttributeInternal(INCH);
    }

    /**
     * Sets <code>value</code> as the attribute value for Inch.
     * @param value value to set the Inch
     */
    public void setInch(String value) {
        setAttributeInternal(INCH, value);
    }

    /**
     * Gets the attribute value for Meter, using the alias name Meter.
     * @return the Meter
     */
    public Number getMeter() {
        return (Number)getAttributeInternal(METER);
    }

    /**
     * Sets <code>value</code> as the attribute value for Meter.
     * @param value value to set the Meter
     */
    public void setMeter(Number value) {
        setAttributeInternal(METER, value);
    }

    /**
     * Gets the attribute value for MarkerWidth, using the alias name MarkerWidth.
     * @return the MarkerWidth
     */
    public String getMarkerWidth() {
        return (String)getAttributeInternal(MARKERWIDTH);
    }

    /**
     * Sets <code>value</code> as the attribute value for MarkerWidth.
     * @param value value to set the MarkerWidth
     */
    public void setMarkerWidth(String value) {
        setAttributeInternal(MARKERWIDTH, value);
    }

    /**
     * Gets the attribute value for FunctionalArea, using the alias name FunctionalArea.
     * @return the FunctionalArea
     */
    public String getFunctionalArea() {
        return (String)getAttributeInternal(FUNCTIONALAREA);
    }

    /**
     * Sets <code>value</code> as the attribute value for FunctionalArea.
     * @param value value to set the FunctionalArea
     */
    public void setFunctionalArea(String value) {
        setAttributeInternal(FUNCTIONALAREA, value);
    }

    /**
     * Gets the attribute value for MarkerEfficiency, using the alias name MarkerEfficiency.
     * @return the MarkerEfficiency
     */
    public String getMarkerEfficiency() {
        return (String)getAttributeInternal(MARKEREFFICIENCY);
    }

    /**
     * Sets <code>value</code> as the attribute value for MarkerEfficiency.
     * @param value value to set the MarkerEfficiency
     */
    public void setMarkerEfficiency(String value) {
        setAttributeInternal(MARKEREFFICIENCY, value);
    }

    /**
     * Gets the attribute value for ShrinkagePattern, using the alias name ShrinkagePattern.
     * @return the ShrinkagePattern
     */
    public String getShrinkagePattern() {
        return (String)getAttributeInternal(SHRINKAGEPATTERN);
    }

    /**
     * Sets <code>value</code> as the attribute value for ShrinkagePattern.
     * @param value value to set the ShrinkagePattern
     */
    public void setShrinkagePattern(String value) {
        setAttributeInternal(SHRINKAGEPATTERN, value);
    }

    /**
     * Gets the attribute value for Remarks, using the alias name Remarks.
     * @return the Remarks
     */
    public String getRemarks() {
        return (String)getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Remarks.
     * @param value value to set the Remarks
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for MarkerWidthMeter, using the alias name MarkerWidthMeter.
     * @return the MarkerWidthMeter
     */
    public Number getMarkerWidthMeter() {
        return (Number)getAttributeInternal(MARKERWIDTHMETER);
    }

    /**
     * Sets <code>value</code> as the attribute value for MarkerWidthMeter.
     * @param value value to set the MarkerWidthMeter
     */
    public void setMarkerWidthMeter(Number value) {
        setAttributeInternal(MARKERWIDTHMETER, value);
    }

    /**
     * Gets the attribute value for MarkerAreaInch, using the alias name MarkerAreaInch.
     * @return the MarkerAreaInch
     */
    public Number getMarkerAreaInch() {
        return (Number)getAttributeInternal(MARKERAREAINCH);
    }

    /**
     * Sets <code>value</code> as the attribute value for MarkerAreaInch.
     * @param value value to set the MarkerAreaInch
     */
    public void setMarkerAreaInch(Number value) {
        setAttributeInternal(MARKERAREAINCH, value);
    }

    /**
     * Gets the attribute value for Attribute15, using the alias name Attribute15.
     * @return the Attribute15
     */
    public String getAttribute15() {
        return (String)getAttributeInternal(ATTRIBUTE15);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute15.
     * @param value value to set the Attribute15
     */
    public void setAttribute15(String value) {
        setAttributeInternal(ATTRIBUTE15, value);
    }

    /**
     * Gets the attribute value for Attribute14, using the alias name Attribute14.
     * @return the Attribute14
     */
    public String getAttribute14() {
        return (String)getAttributeInternal(ATTRIBUTE14);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute14.
     * @param value value to set the Attribute14
     */
    public void setAttribute14(String value) {
        setAttributeInternal(ATTRIBUTE14, value);
    }

    /**
     * Gets the attribute value for Attribute13, using the alias name Attribute13.
     * @return the Attribute13
     */
    public String getAttribute13() {
        return (String)getAttributeInternal(ATTRIBUTE13);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute13.
     * @param value value to set the Attribute13
     */
    public void setAttribute13(String value) {
        setAttributeInternal(ATTRIBUTE13, value);
    }

    /**
     * Gets the attribute value for Attribute12, using the alias name Attribute12.
     * @return the Attribute12
     */
    public String getAttribute12() {
        return (String)getAttributeInternal(ATTRIBUTE12);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute12.
     * @param value value to set the Attribute12
     */
    public void setAttribute12(String value) {
        setAttributeInternal(ATTRIBUTE12, value);
    }

    /**
     * Gets the attribute value for Attribute11, using the alias name Attribute11.
     * @return the Attribute11
     */
    public String getAttribute11() {
        return (String)getAttributeInternal(ATTRIBUTE11);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute11.
     * @param value value to set the Attribute11
     */
    public void setAttribute11(String value) {
        setAttributeInternal(ATTRIBUTE11, value);
    }

    /**
     * Gets the attribute value for Attribute10, using the alias name Attribute10.
     * @return the Attribute10
     */
    public String getAttribute10() {
        return (String)getAttributeInternal(ATTRIBUTE10);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute10.
     * @param value value to set the Attribute10
     */
    public void setAttribute10(String value) {
        setAttributeInternal(ATTRIBUTE10, value);
    }

    /**
     * Gets the attribute value for Attribute9, using the alias name Attribute9.
     * @return the Attribute9
     */
    public String getAttribute9() {
        return (String)getAttributeInternal(ATTRIBUTE9);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute9.
     * @param value value to set the Attribute9
     */
    public void setAttribute9(String value) {
        setAttributeInternal(ATTRIBUTE9, value);
    }

    /**
     * Gets the attribute value for Attribute8, using the alias name Attribute8.
     * @return the Attribute8
     */
    public String getAttribute8() {
        return (String)getAttributeInternal(ATTRIBUTE8);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute8.
     * @param value value to set the Attribute8
     */
    public void setAttribute8(String value) {
        setAttributeInternal(ATTRIBUTE8, value);
    }

    /**
     * Gets the attribute value for Attribute6, using the alias name Attribute6.
     * @return the Attribute6
     */
    public String getAttribute6() {
        return (String)getAttributeInternal(ATTRIBUTE6);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute6.
     * @param value value to set the Attribute6
     */
    public void setAttribute6(String value) {
        setAttributeInternal(ATTRIBUTE6, value);
    }

    /**
     * Gets the attribute value for Attribute7, using the alias name Attribute7.
     * @return the Attribute7
     */
    public String getAttribute7() {
        return (String)getAttributeInternal(ATTRIBUTE7);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute7.
     * @param value value to set the Attribute7
     */
    public void setAttribute7(String value) {
        setAttributeInternal(ATTRIBUTE7, value);
    }

    /**
     * Gets the attribute value for Attribute5, using the alias name Attribute5.
     * @return the Attribute5
     */
    public String getAttribute5() {
        return (String)getAttributeInternal(ATTRIBUTE5);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute5.
     * @param value value to set the Attribute5
     */
    public void setAttribute5(String value) {
        setAttributeInternal(ATTRIBUTE5, value);
    }

    /**
     * Gets the attribute value for Attribute3, using the alias name Attribute3.
     * @return the Attribute3
     */
    public String getAttribute3() {
        return (String)getAttributeInternal(ATTRIBUTE3);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute3.
     * @param value value to set the Attribute3
     */
    public void setAttribute3(String value) {
        setAttributeInternal(ATTRIBUTE3, value);
    }

    /**
     * Gets the attribute value for Attribute4, using the alias name Attribute4.
     * @return the Attribute4
     */
    public String getAttribute4() {
        return (String)getAttributeInternal(ATTRIBUTE4);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute4.
     * @param value value to set the Attribute4
     */
    public void setAttribute4(String value) {
        setAttributeInternal(ATTRIBUTE4, value);
    }

    /**
     * Gets the attribute value for Attribute2, using the alias name Attribute2.
     * @return the Attribute2
     */
    public String getAttribute2() {
        return (String)getAttributeInternal(ATTRIBUTE2);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute2.
     * @param value value to set the Attribute2
     */
    public void setAttribute2(String value) {
        setAttributeInternal(ATTRIBUTE2, value);
    }

    /**
     * Gets the attribute value for Attribute1, using the alias name Attribute1.
     * @return the Attribute1
     */
    public String getAttribute1() {
        return (String)getAttributeInternal(ATTRIBUTE1);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute1.
     * @param value value to set the Attribute1
     */
    public void setAttribute1(String value) {
        setAttributeInternal(ATTRIBUTE1, value);
    }

    /**
     * Gets the attribute value for PocId, using the alias name PocId.
     * @return the PocId
     */
    public Number getPocId() {
        return (Number)getAttributeInternal(POCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for PocId.
     * @param value value to set the PocId
     */
    public void setPocId(Number value) {
        setAttributeInternal(POCID, value);
    }

    /**
     * Gets the attribute value for BuyerName, using the alias name BuyerName.
     * @return the BuyerName
     */
    public String getBuyerName() {
        return (String)getAttributeInternal(BUYERNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for BuyerName.
     * @param value value to set the BuyerName
     */
    public void setBuyerName(String value) {
        setAttributeInternal(BUYERNAME, value);
    }


    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity HeaderEOImpl.
     */
    public HeaderEOImpl getHeaderEO() {
        return (HeaderEOImpl)getAttributeInternal(HEADEREO);
    }

    /**
     * Sets <code>value</code> as the associated entity HeaderEOImpl.
     */
    public void setHeaderEO(HeaderEOImpl value) {
        setAttributeInternal(HEADEREO, value);
    }


    /**
     * @param lineId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number lineId) {
        return new Key(new Object[]{lineId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
     protected void create(AttributeList attributeList) {
         super.create(attributeList);
         oracle.jbo.server.SequenceImpl s =new oracle.jbo.server.SequenceImpl("MNJ_MFG_MARHER_INFO_L_S",getDBTransaction());
         oracle.jbo.domain.Number sVal = s.getSequenceNumber();
         setLineId(sVal);
     }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}
