package mnj.mfg.model.entities;

import java.sql.SQLException;

import java.util.Map;

import oracle.adf.share.ADFContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Jan 28 12:16:42 PKT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class HeaderEOImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        DivisionId {
            public Object get(HeaderEOImpl obj) {
                return obj.getDivisionId();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setDivisionId((String)value);
            }
        }
        ,
        HeaderId {
            public Object get(HeaderEOImpl obj) {
                return obj.getHeaderId();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setHeaderId((Number)value);
            }
        }
        ,
        DocNum {
            public Object get(HeaderEOImpl obj) {
                return obj.getDocNum();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setDocNum((Number)value);
            }
        }
        ,
        MarkerDate {
            public Object get(HeaderEOImpl obj) {
                return obj.getMarkerDate();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setMarkerDate((Date)value);
            }
        }
        ,
        SalesorderId {
            public Object get(HeaderEOImpl obj) {
                return obj.getSalesorderId();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setSalesorderId((Number)value);
            }
        }
        ,
        CadOperatorId {
            public Object get(HeaderEOImpl obj) {
                return obj.getCadOperatorId();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setCadOperatorId((String)value);
            }
        }
        ,
        CadOpName {
            public Object get(HeaderEOImpl obj) {
                return obj.getCadOpName();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setCadOpName((String)value);
            }
        }
        ,
        CustomerId {
            public Object get(HeaderEOImpl obj) {
                return obj.getCustomerId();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setCustomerId((Number)value);
            }
        }
        ,
        Style {
            public Object get(HeaderEOImpl obj) {
                return obj.getStyle();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setStyle((String)value);
            }
        }
        ,
        Bpo {
            public Object get(HeaderEOImpl obj) {
                return obj.getBpo();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setBpo((String)value);
            }
        }
        ,
        Remarks {
            public Object get(HeaderEOImpl obj) {
                return obj.getRemarks();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setRemarks((String)value);
            }
        }
        ,
        LastUpdateDate {
            public Object get(HeaderEOImpl obj) {
                return obj.getLastUpdateDate();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setLastUpdateDate((Date)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(HeaderEOImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setLastUpdatedBy((Number)value);
            }
        }
        ,
        CreationDate {
            public Object get(HeaderEOImpl obj) {
                return obj.getCreationDate();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setCreationDate((Date)value);
            }
        }
        ,
        CreatedBy {
            public Object get(HeaderEOImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setCreatedBy((Number)value);
            }
        }
        ,
        LastUpdateLogin {
            public Object get(HeaderEOImpl obj) {
                return obj.getLastUpdateLogin();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setLastUpdateLogin((Number)value);
            }
        }
        ,
        Attribute1 {
            public Object get(HeaderEOImpl obj) {
                return obj.getAttribute1();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setAttribute1((String)value);
            }
        }
        ,
        Attribute2 {
            public Object get(HeaderEOImpl obj) {
                return obj.getAttribute2();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setAttribute2((String)value);
            }
        }
        ,
        Attribute3 {
            public Object get(HeaderEOImpl obj) {
                return obj.getAttribute3();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setAttribute3((String)value);
            }
        }
        ,
        Attribute4 {
            public Object get(HeaderEOImpl obj) {
                return obj.getAttribute4();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setAttribute4((String)value);
            }
        }
        ,
        Attribute5 {
            public Object get(HeaderEOImpl obj) {
                return obj.getAttribute5();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setAttribute5((String)value);
            }
        }
        ,
        Attribute6 {
            public Object get(HeaderEOImpl obj) {
                return obj.getAttribute6();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setAttribute6((String)value);
            }
        }
        ,
        Attribute7 {
            public Object get(HeaderEOImpl obj) {
                return obj.getAttribute7();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setAttribute7((String)value);
            }
        }
        ,
        Attribute8 {
            public Object get(HeaderEOImpl obj) {
                return obj.getAttribute8();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setAttribute8((String)value);
            }
        }
        ,
        Attribute9 {
            public Object get(HeaderEOImpl obj) {
                return obj.getAttribute9();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setAttribute9((String)value);
            }
        }
        ,
        Attribute10 {
            public Object get(HeaderEOImpl obj) {
                return obj.getAttribute10();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setAttribute10((String)value);
            }
        }
        ,
        Attribute11 {
            public Object get(HeaderEOImpl obj) {
                return obj.getAttribute11();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setAttribute11((String)value);
            }
        }
        ,
        Attribute12 {
            public Object get(HeaderEOImpl obj) {
                return obj.getAttribute12();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setAttribute12((String)value);
            }
        }
        ,
        Attribute13 {
            public Object get(HeaderEOImpl obj) {
                return obj.getAttribute13();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setAttribute13((String)value);
            }
        }
        ,
        Attribute14 {
            public Object get(HeaderEOImpl obj) {
                return obj.getAttribute14();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setAttribute14((String)value);
            }
        }
        ,
        Attribute15 {
            public Object get(HeaderEOImpl obj) {
                return obj.getAttribute15();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setAttribute15((String)value);
            }
        }
        ,
        Buyer {
            public Object get(HeaderEOImpl obj) {
                return obj.getBuyer();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setBuyer((String)value);
            }
        }
        ,
        LinesEO {
            public Object get(HeaderEOImpl obj) {
                return obj.getLinesEO();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(HeaderEOImpl object);

        public abstract void put(HeaderEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int DIVISIONID = AttributesEnum.DivisionId.index();
    public static final int HEADERID = AttributesEnum.HeaderId.index();
    public static final int DOCNUM = AttributesEnum.DocNum.index();
    public static final int MARKERDATE = AttributesEnum.MarkerDate.index();
    public static final int SALESORDERID = AttributesEnum.SalesorderId.index();
    public static final int CADOPERATORID = AttributesEnum.CadOperatorId.index();
    public static final int CADOPNAME = AttributesEnum.CadOpName.index();
    public static final int CUSTOMERID = AttributesEnum.CustomerId.index();
    public static final int STYLE = AttributesEnum.Style.index();
    public static final int BPO = AttributesEnum.Bpo.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int LASTUPDATELOGIN = AttributesEnum.LastUpdateLogin.index();
    public static final int ATTRIBUTE1 = AttributesEnum.Attribute1.index();
    public static final int ATTRIBUTE2 = AttributesEnum.Attribute2.index();
    public static final int ATTRIBUTE3 = AttributesEnum.Attribute3.index();
    public static final int ATTRIBUTE4 = AttributesEnum.Attribute4.index();
    public static final int ATTRIBUTE5 = AttributesEnum.Attribute5.index();
    public static final int ATTRIBUTE6 = AttributesEnum.Attribute6.index();
    public static final int ATTRIBUTE7 = AttributesEnum.Attribute7.index();
    public static final int ATTRIBUTE8 = AttributesEnum.Attribute8.index();
    public static final int ATTRIBUTE9 = AttributesEnum.Attribute9.index();
    public static final int ATTRIBUTE10 = AttributesEnum.Attribute10.index();
    public static final int ATTRIBUTE11 = AttributesEnum.Attribute11.index();
    public static final int ATTRIBUTE12 = AttributesEnum.Attribute12.index();
    public static final int ATTRIBUTE13 = AttributesEnum.Attribute13.index();
    public static final int ATTRIBUTE14 = AttributesEnum.Attribute14.index();
    public static final int ATTRIBUTE15 = AttributesEnum.Attribute15.index();
    public static final int BUYER = AttributesEnum.Buyer.index();
    public static final int LINESEO = AttributesEnum.LinesEO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public HeaderEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("mnj.mfg.model.entities.HeaderEO");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for DivisionId, using the alias name DivisionId.
     * @return the DivisionId
     */
    public String getDivisionId() {
        return (String)getAttributeInternal(DIVISIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DivisionId.
     * @param value value to set the DivisionId
     */
    public void setDivisionId(String value) {
        setAttributeInternal(DIVISIONID, value);
    }

    /**
     * Gets the attribute value for HeaderId, using the alias name HeaderId.
     * @return the HeaderId
     */
    public Number getHeaderId() {
        return (Number)getAttributeInternal(HEADERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HeaderId.
     * @param value value to set the HeaderId
     */
    public void setHeaderId(Number value) {
        setAttributeInternal(HEADERID, value);
    }

    /**
     * Gets the attribute value for DocNum, using the alias name DocNum.
     * @return the DocNum
     */
    public Number getDocNum() {
        return (Number)getAttributeInternal(DOCNUM);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocNum.
     * @param value value to set the DocNum
     */
    public void setDocNum(Number value) {
        setAttributeInternal(DOCNUM, value);
    }

    /**
     * Gets the attribute value for MarkerDate, using the alias name MarkerDate.
     * @return the MarkerDate
     */
    public Date getMarkerDate() {
        return (Date)getAttributeInternal(MARKERDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for MarkerDate.
     * @param value value to set the MarkerDate
     */
    public void setMarkerDate(Date value) {
        setAttributeInternal(MARKERDATE, value);
    }

    /**
     * Gets the attribute value for SalesorderId, using the alias name SalesorderId.
     * @return the SalesorderId
     */
    public Number getSalesorderId() {
        return (Number)getAttributeInternal(SALESORDERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SalesorderId.
     * @param value value to set the SalesorderId
     */
    public void setSalesorderId(Number value) {
        setAttributeInternal(SALESORDERID, value);
    }

    /**
     * Gets the attribute value for CadOperatorId, using the alias name CadOperatorId.
     * @return the CadOperatorId
     */
    public String getCadOperatorId() {
        return (String)getAttributeInternal(CADOPERATORID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CadOperatorId.
     * @param value value to set the CadOperatorId
     */
    public void setCadOperatorId(String value) {
        setAttributeInternal(CADOPERATORID, value);
    }

    /**
     * Gets the attribute value for CadOpName, using the alias name CadOpName.
     * @return the CadOpName
     */
    public String getCadOpName() {
        return (String)getAttributeInternal(CADOPNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for CadOpName.
     * @param value value to set the CadOpName
     */
    public void setCadOpName(String value) {
        setAttributeInternal(CADOPNAME, value);
    }

    /**
     * Gets the attribute value for CustomerId, using the alias name CustomerId.
     * @return the CustomerId
     */
    public Number getCustomerId() {
        return (Number)getAttributeInternal(CUSTOMERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CustomerId.
     * @param value value to set the CustomerId
     */
    public void setCustomerId(Number value) {
        setAttributeInternal(CUSTOMERID, value);
    }

    /**
     * Gets the attribute value for Style, using the alias name Style.
     * @return the Style
     */
    public String getStyle() {
        return (String)getAttributeInternal(STYLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Style.
     * @param value value to set the Style
     */
    public void setStyle(String value) {
        setAttributeInternal(STYLE, value);
    }

    /**
     * Gets the attribute value for Bpo, using the alias name Bpo.
     * @return the Bpo
     */
    public String getBpo() {
        return (String)getAttributeInternal(BPO);
    }

    /**
     * Sets <code>value</code> as the attribute value for Bpo.
     * @param value value to set the Bpo
     */
    public void setBpo(String value) {
        setAttributeInternal(BPO, value);
    }

    /**
     * Gets the attribute value for Remarks, using the alias name Remarks.
     * @return the Remarks
     */
    public String getRemarks() {
        return (String)getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Remarks.
     * @param value value to set the Remarks
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate.
     * @return the LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date)getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdateDate.
     * @param value value to set the LastUpdateDate
     */
    public void setLastUpdateDate(Date value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the LastUpdatedBy
     */
    public Number getLastUpdatedBy() {
        return (Number)getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(Number value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the CreationDate
     */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreationDate.
     * @param value value to set the CreationDate
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the CreatedBy
     */
    public Number getCreatedBy() {
        return (Number)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdateLogin, using the alias name LastUpdateLogin.
     * @return the LastUpdateLogin
     */
    public Number getLastUpdateLogin() {
        return (Number)getAttributeInternal(LASTUPDATELOGIN);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdateLogin.
     * @param value value to set the LastUpdateLogin
     */
    public void setLastUpdateLogin(Number value) {
        setAttributeInternal(LASTUPDATELOGIN, value);
    }

    /**
     * Gets the attribute value for Attribute1, using the alias name Attribute1.
     * @return the Attribute1
     */
    public String getAttribute1() {
        return (String)getAttributeInternal(ATTRIBUTE1);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute1.
     * @param value value to set the Attribute1
     */
    public void setAttribute1(String value) {
        setAttributeInternal(ATTRIBUTE1, value);
    }

    /**
     * Gets the attribute value for Attribute2, using the alias name Attribute2.
     * @return the Attribute2
     */
    public String getAttribute2() {
        return (String)getAttributeInternal(ATTRIBUTE2);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute2.
     * @param value value to set the Attribute2
     */
    public void setAttribute2(String value) {
        setAttributeInternal(ATTRIBUTE2, value);
    }

    /**
     * Gets the attribute value for Attribute3, using the alias name Attribute3.
     * @return the Attribute3
     */
    public String getAttribute3() {
        return (String)getAttributeInternal(ATTRIBUTE3);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute3.
     * @param value value to set the Attribute3
     */
    public void setAttribute3(String value) {
        setAttributeInternal(ATTRIBUTE3, value);
    }

    /**
     * Gets the attribute value for Attribute4, using the alias name Attribute4.
     * @return the Attribute4
     */
    public String getAttribute4() {
        return (String)getAttributeInternal(ATTRIBUTE4);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute4.
     * @param value value to set the Attribute4
     */
    public void setAttribute4(String value) {
        setAttributeInternal(ATTRIBUTE4, value);
    }

    /**
     * Gets the attribute value for Attribute5, using the alias name Attribute5.
     * @return the Attribute5
     */
    public String getAttribute5() {
        return (String)getAttributeInternal(ATTRIBUTE5);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute5.
     * @param value value to set the Attribute5
     */
    public void setAttribute5(String value) {
        setAttributeInternal(ATTRIBUTE5, value);
    }

    /**
     * Gets the attribute value for Attribute6, using the alias name Attribute6.
     * @return the Attribute6
     */
    public String getAttribute6() {
        return (String)getAttributeInternal(ATTRIBUTE6);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute6.
     * @param value value to set the Attribute6
     */
    public void setAttribute6(String value) {
        setAttributeInternal(ATTRIBUTE6, value);
    }

    /**
     * Gets the attribute value for Attribute7, using the alias name Attribute7.
     * @return the Attribute7
     */
    public String getAttribute7() {
        return (String)getAttributeInternal(ATTRIBUTE7);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute7.
     * @param value value to set the Attribute7
     */
    public void setAttribute7(String value) {
        setAttributeInternal(ATTRIBUTE7, value);
    }

    /**
     * Gets the attribute value for Attribute8, using the alias name Attribute8.
     * @return the Attribute8
     */
    public String getAttribute8() {
        return (String)getAttributeInternal(ATTRIBUTE8);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute8.
     * @param value value to set the Attribute8
     */
    public void setAttribute8(String value) {
        setAttributeInternal(ATTRIBUTE8, value);
    }

    /**
     * Gets the attribute value for Attribute9, using the alias name Attribute9.
     * @return the Attribute9
     */
    public String getAttribute9() {
        return (String)getAttributeInternal(ATTRIBUTE9);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute9.
     * @param value value to set the Attribute9
     */
    public void setAttribute9(String value) {
        setAttributeInternal(ATTRIBUTE9, value);
    }

    /**
     * Gets the attribute value for Attribute10, using the alias name Attribute10.
     * @return the Attribute10
     */
    public String getAttribute10() {
        return (String)getAttributeInternal(ATTRIBUTE10);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute10.
     * @param value value to set the Attribute10
     */
    public void setAttribute10(String value) {
        setAttributeInternal(ATTRIBUTE10, value);
    }

    /**
     * Gets the attribute value for Attribute11, using the alias name Attribute11.
     * @return the Attribute11
     */
    public String getAttribute11() {
        return (String)getAttributeInternal(ATTRIBUTE11);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute11.
     * @param value value to set the Attribute11
     */
    public void setAttribute11(String value) {
        setAttributeInternal(ATTRIBUTE11, value);
    }

    /**
     * Gets the attribute value for Attribute12, using the alias name Attribute12.
     * @return the Attribute12
     */
    public String getAttribute12() {
        return (String)getAttributeInternal(ATTRIBUTE12);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute12.
     * @param value value to set the Attribute12
     */
    public void setAttribute12(String value) {
        setAttributeInternal(ATTRIBUTE12, value);
    }

    /**
     * Gets the attribute value for Attribute13, using the alias name Attribute13.
     * @return the Attribute13
     */
    public String getAttribute13() {
        return (String)getAttributeInternal(ATTRIBUTE13);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute13.
     * @param value value to set the Attribute13
     */
    public void setAttribute13(String value) {
        setAttributeInternal(ATTRIBUTE13, value);
    }

    /**
     * Gets the attribute value for Attribute14, using the alias name Attribute14.
     * @return the Attribute14
     */
    public String getAttribute14() {
        return (String)getAttributeInternal(ATTRIBUTE14);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute14.
     * @param value value to set the Attribute14
     */
    public void setAttribute14(String value) {
        setAttributeInternal(ATTRIBUTE14, value);
    }

    /**
     * Gets the attribute value for Attribute15, using the alias name Attribute15.
     * @return the Attribute15
     */
    public String getAttribute15() {
        return (String)getAttributeInternal(ATTRIBUTE15);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute15.
     * @param value value to set the Attribute15
     */
    public void setAttribute15(String value) {
        setAttributeInternal(ATTRIBUTE15, value);
    }

    /**
     * Gets the attribute value for Buyer, using the alias name Buyer.
     * @return the Buyer
     */
    public String getBuyer() {
        return (String)getAttributeInternal(BUYER);
    }

    /**
     * Sets <code>value</code> as the attribute value for Buyer.
     * @param value value to set the Buyer
     */
    public void setBuyer(String value) {
        setAttributeInternal(BUYER, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getLinesEO() {
        return (RowIterator)getAttributeInternal(LINESEO);
    }


    /**
     * @param headerId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number headerId) {
        return new Key(new Object[]{headerId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        oracle.jbo.server.SequenceImpl s =new oracle.jbo.server.SequenceImpl("MNJ_MFG_MARHER_INFO_H_S",getDBTransaction());
        oracle.jbo.domain.Number sVal = s.getSequenceNumber();
        setHeaderId(sVal);
    }
    
    public String getSrNoString() {
        String srno = null;
        String stmt = "BEGIN :1 := mnj_mfg_doc_no_pkg.marker_info_srno; end;";
        java.sql.CallableStatement cs =
            getDBTransaction().createCallableStatement(stmt, 1);
        try {
            cs.registerOutParameter(1, oracle.jdbc.OracleTypes.VARCHAR);
            cs.execute();
            srno = cs.getString(1);
            cs.close();
            System.out.println(srno+"srno--->"+srno);
        } catch (Exception e) {
            e.printStackTrace();
        }
        return srno;
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
     protected void doDML(int operation, TransactionEvent e) {
         Map sessionScope = ADFContext.getCurrent().getSessionScope();   
         String user = (String)sessionScope.get("userId");
         String orgId  =(String)sessionScope.get("orgId");
         String unitName  =(String)sessionScope.get("unitName");
        
         System.out.println("MARKER INFO DO DML 1 ------------------>"+user);
         System.out.println("MARKER INFO DO DML 2------------------>"+orgId);
         System.out.println("MARKER INFO DO DML 3 ------------------>"+unitName);
         
         if(DML_UPDATE == operation){
                   try {
                       setLastUpdateDate((Date)Date.getCurrentDate()); 
                       setLastUpdatedBy(new oracle.jbo.domain.Number(user));
                   } catch (SQLException f) {
                       System.out.println(f.getMessage());
                   }
               }
               else if (DML_INSERT == operation){
                
                   try {
                       setAttribute1(getSrNoString());
                       setDivisionId(orgId);
                       setAttribute2(unitName);
                       setCreationDate((Date)Date.getCurrentDate());  
                       setCreatedBy(new oracle.jbo.domain.Number(user));
                      
                      
                      
                   } catch (SQLException f) {
                       ;
                   }
               }
         
         super.doDML(operation, e);
     }
}
