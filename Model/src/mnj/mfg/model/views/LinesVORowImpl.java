package mnj.mfg.model.views;

import mnj.mfg.model.entities.LinesEOImpl;

import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Jan 30 16:32:48 PKT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class LinesVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        DivisionId {
            public Object get(LinesVORowImpl obj) {
                return obj.getDivisionId();
            }

            public void put(LinesVORowImpl obj, Object value) {
                obj.setDivisionId((String)value);
            }
        }
        ,
        HeaderId {
            public Object get(LinesVORowImpl obj) {
                return obj.getHeaderId();
            }

            public void put(LinesVORowImpl obj, Object value) {
                obj.setHeaderId((Number)value);
            }
        }
        ,
        LineId {
            public Object get(LinesVORowImpl obj) {
                return obj.getLineId();
            }

            public void put(LinesVORowImpl obj, Object value) {
                obj.setLineId((Number)value);
            }
        }
        ,
        BuyerId {
            public Object get(LinesVORowImpl obj) {
                return obj.getBuyerId();
            }

            public void put(LinesVORowImpl obj, Object value) {
                obj.setBuyerId((Number)value);
            }
        }
        ,
        Season {
            public Object get(LinesVORowImpl obj) {
                return obj.getSeason();
            }

            public void put(LinesVORowImpl obj, Object value) {
                obj.setSeason((String)value);
            }
        }
        ,
        Brand {
            public Object get(LinesVORowImpl obj) {
                return obj.getBrand();
            }

            public void put(LinesVORowImpl obj, Object value) {
                obj.setBrand((String)value);
            }
        }
        ,
        StyleName {
            public Object get(LinesVORowImpl obj) {
                return obj.getStyleName();
            }

            public void put(LinesVORowImpl obj, Object value) {
                obj.setStyleName((String)value);
            }
        }
        ,
        MarkerPlanNumber {
            public Object get(LinesVORowImpl obj) {
                return obj.getMarkerPlanNumber();
            }

            public void put(LinesVORowImpl obj, Object value) {
                obj.setMarkerPlanNumber((String)value);
            }
        }
        ,
        MarkerId {
            public Object get(LinesVORowImpl obj) {
                return obj.getMarkerId();
            }

            public void put(LinesVORowImpl obj, Object value) {
                obj.setMarkerId((String)value);
            }
        }
        ,
        Color {
            public Object get(LinesVORowImpl obj) {
                return obj.getColor();
            }

            public void put(LinesVORowImpl obj, Object value) {
                obj.setColor((String)value);
            }
        }
        ,
        Yds {
            public Object get(LinesVORowImpl obj) {
                return obj.getYds();
            }

            public void put(LinesVORowImpl obj, Object value) {
                obj.setYds((String)value);
            }
        }
        ,
        Inch {
            public Object get(LinesVORowImpl obj) {
                return obj.getInch();
            }

            public void put(LinesVORowImpl obj, Object value) {
                obj.setInch((String)value);
            }
        }
        ,
        Meter {
            public Object get(LinesVORowImpl obj) {
                return obj.getMeter();
            }

            public void put(LinesVORowImpl obj, Object value) {
                obj.setMeter((Number)value);
            }
        }
        ,
        MarkerWidth {
            public Object get(LinesVORowImpl obj) {
                return obj.getMarkerWidth();
            }

            public void put(LinesVORowImpl obj, Object value) {
                obj.setMarkerWidth((String)value);
            }
        }
        ,
        FunctionalArea {
            public Object get(LinesVORowImpl obj) {
                return obj.getFunctionalArea();
            }

            public void put(LinesVORowImpl obj, Object value) {
                obj.setFunctionalArea((String)value);
            }
        }
        ,
        MarkerEfficiency {
            public Object get(LinesVORowImpl obj) {
                return obj.getMarkerEfficiency();
            }

            public void put(LinesVORowImpl obj, Object value) {
                obj.setMarkerEfficiency((String)value);
            }
        }
        ,
        ShrinkagePattern {
            public Object get(LinesVORowImpl obj) {
                return obj.getShrinkagePattern();
            }

            public void put(LinesVORowImpl obj, Object value) {
                obj.setShrinkagePattern((String)value);
            }
        }
        ,
        Remarks {
            public Object get(LinesVORowImpl obj) {
                return obj.getRemarks();
            }

            public void put(LinesVORowImpl obj, Object value) {
                obj.setRemarks((String)value);
            }
        }
        ,
        MarkerWidthMeter {
            public Object get(LinesVORowImpl obj) {
                return obj.getMarkerWidthMeter();
            }

            public void put(LinesVORowImpl obj, Object value) {
                obj.setMarkerWidthMeter((Number)value);
            }
        }
        ,
        MarkerAreaInch {
            public Object get(LinesVORowImpl obj) {
                return obj.getMarkerAreaInch();
            }

            public void put(LinesVORowImpl obj, Object value) {
                obj.setMarkerAreaInch((Number)value);
            }
        }
        ,
        Attribute1 {
            public Object get(LinesVORowImpl obj) {
                return obj.getAttribute1();
            }

            public void put(LinesVORowImpl obj, Object value) {
                obj.setAttribute1((String)value);
            }
        }
        ,
        PocId {
            public Object get(LinesVORowImpl obj) {
                return obj.getPocId();
            }

            public void put(LinesVORowImpl obj, Object value) {
                obj.setPocId((Number)value);
            }
        }
        ,
        BuyerIdNew {
            public Object get(LinesVORowImpl obj) {
                return obj.getBuyerIdNew();
            }

            public void put(LinesVORowImpl obj, Object value) {
                obj.setBuyerIdNew((Number)value);
            }
        }
        ,
        CustomerName {
            public Object get(LinesVORowImpl obj) {
                return obj.getCustomerName();
            }

            public void put(LinesVORowImpl obj, Object value) {
                obj.setCustomerName((String)value);
            }
        }
        ,
        StyleNew {
            public Object get(LinesVORowImpl obj) {
                return obj.getStyleNew();
            }

            public void put(LinesVORowImpl obj, Object value) {
                obj.setStyleNew((String)value);
            }
        }
        ,
        SeasonNew {
            public Object get(LinesVORowImpl obj) {
                return obj.getSeasonNew();
            }

            public void put(LinesVORowImpl obj, Object value) {
                obj.setSeasonNew((String)value);
            }
        }
        ,
        buyer1 {
            public Object get(LinesVORowImpl obj) {
                return obj.getbuyer1();
            }

            public void put(LinesVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        StyleLov1 {
            public Object get(LinesVORowImpl obj) {
                return obj.getStyleLov1();
            }

            public void put(LinesVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        planLov1 {
            public Object get(LinesVORowImpl obj) {
                return obj.getplanLov1();
            }

            public void put(LinesVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        planNumber1 {
            public Object get(LinesVORowImpl obj) {
                return obj.getplanNumber1();
            }

            public void put(LinesVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        patternLov1 {
            public Object get(LinesVORowImpl obj) {
                return obj.getpatternLov1();
            }

            public void put(LinesVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MNJSeasonLOV1 {
            public Object get(LinesVORowImpl obj) {
                return obj.getMNJSeasonLOV1();
            }

            public void put(LinesVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        POC_ID_LOV1 {
            public Object get(LinesVORowImpl obj) {
                return obj.getPOC_ID_LOV1();
            }

            public void put(LinesVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(LinesVORowImpl object);

        public abstract void put(LinesVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


//    public static final int ATTRIBUTE1_1 = AttributesEnum.Attribute1_1.index();


    public static final int DIVISIONID = AttributesEnum.DivisionId.index();
    public static final int HEADERID = AttributesEnum.HeaderId.index();
    public static final int LINEID = AttributesEnum.LineId.index();
    public static final int BUYERID = AttributesEnum.BuyerId.index();
    public static final int SEASON = AttributesEnum.Season.index();
    public static final int BRAND = AttributesEnum.Brand.index();
    public static final int STYLENAME = AttributesEnum.StyleName.index();
    public static final int MARKERPLANNUMBER = AttributesEnum.MarkerPlanNumber.index();
    public static final int MARKERID = AttributesEnum.MarkerId.index();
    public static final int COLOR = AttributesEnum.Color.index();
    public static final int YDS = AttributesEnum.Yds.index();
    public static final int INCH = AttributesEnum.Inch.index();
    public static final int METER = AttributesEnum.Meter.index();
    public static final int MARKERWIDTH = AttributesEnum.MarkerWidth.index();
    public static final int FUNCTIONALAREA = AttributesEnum.FunctionalArea.index();
    public static final int MARKEREFFICIENCY = AttributesEnum.MarkerEfficiency.index();
    public static final int SHRINKAGEPATTERN = AttributesEnum.ShrinkagePattern.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int MARKERWIDTHMETER = AttributesEnum.MarkerWidthMeter.index();
    public static final int MARKERAREAINCH = AttributesEnum.MarkerAreaInch.index();
    public static final int ATTRIBUTE1 = AttributesEnum.Attribute1.index();
    public static final int POCID = AttributesEnum.PocId.index();
    public static final int BUYERIDNEW = AttributesEnum.BuyerIdNew.index();
    public static final int CUSTOMERNAME = AttributesEnum.CustomerName.index();
    public static final int STYLENEW = AttributesEnum.StyleNew.index();
    public static final int SEASONNEW = AttributesEnum.SeasonNew.index();
    public static final int BUYER1 = AttributesEnum.buyer1.index();
    public static final int STYLELOV1 = AttributesEnum.StyleLov1.index();
    public static final int PLANLOV1 = AttributesEnum.planLov1.index();
    public static final int PLANNUMBER1 = AttributesEnum.planNumber1.index();
    public static final int PATTERNLOV1 = AttributesEnum.patternLov1.index();
    public static final int MNJSEASONLOV1 = AttributesEnum.MNJSeasonLOV1.index();
    public static final int POC_ID_LOV1 = AttributesEnum.POC_ID_LOV1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public LinesVORowImpl() {
    }

    /**
     * Gets LinesEO entity object.
     * @return the LinesEO
     */
    public LinesEOImpl getLinesEO() {
        return (LinesEOImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for DIVISION_ID using the alias name DivisionId.
     * @return the DIVISION_ID
     */
    public String getDivisionId() {
        return (String) getAttributeInternal(DIVISIONID);
    }

    /**
     * Sets <code>value</code> as attribute value for DIVISION_ID using the alias name DivisionId.
     * @param value value to set the DIVISION_ID
     */
    public void setDivisionId(String value) {
        setAttributeInternal(DIVISIONID, value);
    }

    /**
     * Gets the attribute value for HEADER_ID using the alias name HeaderId.
     * @return the HEADER_ID
     */
    public Number getHeaderId() {
        return (Number) getAttributeInternal(HEADERID);
    }

    /**
     * Sets <code>value</code> as attribute value for HEADER_ID using the alias name HeaderId.
     * @param value value to set the HEADER_ID
     */
    public void setHeaderId(Number value) {
        setAttributeInternal(HEADERID, value);
    }

    /**
     * Gets the attribute value for LINE_ID using the alias name LineId.
     * @return the LINE_ID
     */
    public Number getLineId() {
        return (Number) getAttributeInternal(LINEID);
    }

    /**
     * Sets <code>value</code> as attribute value for LINE_ID using the alias name LineId.
     * @param value value to set the LINE_ID
     */
    public void setLineId(Number value) {
        setAttributeInternal(LINEID, value);
    }

    /**
     * Gets the attribute value for BUYER_ID using the alias name BuyerId.
     * @return the BUYER_ID
     */
    public Number getBuyerId() {
        return (Number) getAttributeInternal(BUYERID);
    }

    /**
     * Sets <code>value</code> as attribute value for BUYER_ID using the alias name BuyerId.
     * @param value value to set the BUYER_ID
     */
    public void setBuyerId(Number value) {
        setAttributeInternal(BUYERID, value);
    }

    /**
     * Gets the attribute value for SEASON using the alias name Season.
     * @return the SEASON
     */
    public String getSeason() {
        return (String) getAttributeInternal(SEASON);
    }

    /**
     * Sets <code>value</code> as attribute value for SEASON using the alias name Season.
     * @param value value to set the SEASON
     */
    public void setSeason(String value) {
        setAttributeInternal(SEASON, value);
    }

    /**
     * Gets the attribute value for BRAND using the alias name Brand.
     * @return the BRAND
     */
    public String getBrand() {
        return (String) getAttributeInternal(BRAND);
    }

    /**
     * Sets <code>value</code> as attribute value for BRAND using the alias name Brand.
     * @param value value to set the BRAND
     */
    public void setBrand(String value) {
        setAttributeInternal(BRAND, value);
    }

    /**
     * Gets the attribute value for STYLE_NAME using the alias name StyleName.
     * @return the STYLE_NAME
     */
    public String getStyleName() {
        return (String) getAttributeInternal(STYLENAME);
    }

    /**
     * Sets <code>value</code> as attribute value for STYLE_NAME using the alias name StyleName.
     * @param value value to set the STYLE_NAME
     */
    public void setStyleName(String value) {
        setAttributeInternal(STYLENAME, value);
    }

    /**
     * Gets the attribute value for MARKER_PLAN_NUMBER using the alias name MarkerPlanNumber.
     * @return the MARKER_PLAN_NUMBER
     */
    public String getMarkerPlanNumber() {
        return (String) getAttributeInternal(MARKERPLANNUMBER);
    }

    /**
     * Sets <code>value</code> as attribute value for MARKER_PLAN_NUMBER using the alias name MarkerPlanNumber.
     * @param value value to set the MARKER_PLAN_NUMBER
     */
    public void setMarkerPlanNumber(String value) {
        setAttributeInternal(MARKERPLANNUMBER, value);
    }

    /**
     * Gets the attribute value for MARKER_ID using the alias name MarkerId.
     * @return the MARKER_ID
     */
    public String getMarkerId() {
        return (String) getAttributeInternal(MARKERID);
    }

    /**
     * Sets <code>value</code> as attribute value for MARKER_ID using the alias name MarkerId.
     * @param value value to set the MARKER_ID
     */
    public void setMarkerId(String value) {
        setAttributeInternal(MARKERID, value);
    }

    /**
     * Gets the attribute value for COLOR using the alias name Color.
     * @return the COLOR
     */
    public String getColor() {
        return (String) getAttributeInternal(COLOR);
    }

    /**
     * Sets <code>value</code> as attribute value for COLOR using the alias name Color.
     * @param value value to set the COLOR
     */
    public void setColor(String value) {
        setAttributeInternal(COLOR, value);
    }

    /**
     * Gets the attribute value for YDS using the alias name Yds.
     * @return the YDS
     */
    public String getYds() {
        return (String) getAttributeInternal(YDS);
    }

    /**
     * Sets <code>value</code> as attribute value for YDS using the alias name Yds.
     * @param value value to set the YDS
     */
    public void setYds(String value) {
        setAttributeInternal(YDS, value);
    }

    /**
     * Gets the attribute value for INCH using the alias name Inch.
     * @return the INCH
     */
    public String getInch() {
        return (String) getAttributeInternal(INCH);
    }

    /**
     * Sets <code>value</code> as attribute value for INCH using the alias name Inch.
     * @param value value to set the INCH
     */
    public void setInch(String value) {
        setAttributeInternal(INCH, value);
    }

    /**
     * Gets the attribute value for METER using the alias name Meter.
     * @return the METER
     */
    public Number getMeter() {
        return (Number) getAttributeInternal(METER);
    }

    /**
     * Sets <code>value</code> as attribute value for METER using the alias name Meter.
     * @param value value to set the METER
     */
    public void setMeter(Number value) {
        setAttributeInternal(METER, value);
    }

    /**
     * Gets the attribute value for MARKER_WIDTH using the alias name MarkerWidth.
     * @return the MARKER_WIDTH
     */
    public String getMarkerWidth() {
        return (String) getAttributeInternal(MARKERWIDTH);
    }

    /**
     * Sets <code>value</code> as attribute value for MARKER_WIDTH using the alias name MarkerWidth.
     * @param value value to set the MARKER_WIDTH
     */
    public void setMarkerWidth(String value) {
        setAttributeInternal(MARKERWIDTH, value);
    }

    /**
     * Gets the attribute value for FUNCTIONAL_AREA using the alias name FunctionalArea.
     * @return the FUNCTIONAL_AREA
     */
    public String getFunctionalArea() {
        return (String) getAttributeInternal(FUNCTIONALAREA);
    }

    /**
     * Sets <code>value</code> as attribute value for FUNCTIONAL_AREA using the alias name FunctionalArea.
     * @param value value to set the FUNCTIONAL_AREA
     */
    public void setFunctionalArea(String value) {
        setAttributeInternal(FUNCTIONALAREA, value);
    }

    /**
     * Gets the attribute value for MARKER_EFFICIENCY using the alias name MarkerEfficiency.
     * @return the MARKER_EFFICIENCY
     */
    public String getMarkerEfficiency() {
        return (String) getAttributeInternal(MARKEREFFICIENCY);
    }

    /**
     * Sets <code>value</code> as attribute value for MARKER_EFFICIENCY using the alias name MarkerEfficiency.
     * @param value value to set the MARKER_EFFICIENCY
     */
    public void setMarkerEfficiency(String value) {
        setAttributeInternal(MARKEREFFICIENCY, value);
    }

    /**
     * Gets the attribute value for SHRINKAGE_PATTERN using the alias name ShrinkagePattern.
     * @return the SHRINKAGE_PATTERN
     */
    public String getShrinkagePattern() {
        return (String) getAttributeInternal(SHRINKAGEPATTERN);
    }

    /**
     * Sets <code>value</code> as attribute value for SHRINKAGE_PATTERN using the alias name ShrinkagePattern.
     * @param value value to set the SHRINKAGE_PATTERN
     */
    public void setShrinkagePattern(String value) {
        setAttributeInternal(SHRINKAGEPATTERN, value);
    }

    /**
     * Gets the attribute value for REMARKS using the alias name Remarks.
     * @return the REMARKS
     */
    public String getRemarks() {
        return (String) getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as attribute value for REMARKS using the alias name Remarks.
     * @param value value to set the REMARKS
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for MARKER_WIDTH_METER using the alias name MarkerWidthMeter.
     * @return the MARKER_WIDTH_METER
     */
    public Number getMarkerWidthMeter() {
        return (Number) getAttributeInternal(MARKERWIDTHMETER);
    }

    /**
     * Sets <code>value</code> as attribute value for MARKER_WIDTH_METER using the alias name MarkerWidthMeter.
     * @param value value to set the MARKER_WIDTH_METER
     */
    public void setMarkerWidthMeter(Number value) {
        setAttributeInternal(MARKERWIDTHMETER, value);
    }

    /**
     * Gets the attribute value for MARKER_AREA_INCH using the alias name MarkerAreaInch.
     * @return the MARKER_AREA_INCH
     */
    public Number getMarkerAreaInch() {
        return (Number) getAttributeInternal(MARKERAREAINCH);
    }

    /**
     * Sets <code>value</code> as attribute value for MARKER_AREA_INCH using the alias name MarkerAreaInch.
     * @param value value to set the MARKER_AREA_INCH
     */
    public void setMarkerAreaInch(Number value) {
        setAttributeInternal(MARKERAREAINCH, value);
    }


    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE1 using the alias name Attribute1_1.
     * @param value value to set the ATTRIBUTE1
     */


    /**
     * Gets the attribute value for ATTRIBUTE1 using the alias name Attribute1.
     * @return the ATTRIBUTE1
     */
    public String getAttribute1() {
        return (String) getAttributeInternal(ATTRIBUTE1);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE1 using the alias name Attribute1.
     * @param value value to set the ATTRIBUTE1
     */
    public void setAttribute1(String value) {
        setAttributeInternal(ATTRIBUTE1, value);
    }

    /**
     * Gets the attribute value for POC_ID using the alias name PocId.
     * @return the POC_ID
     */
    public Number getPocId() {
        return (Number) getAttributeInternal(POCID);
    }

    /**
     * Sets <code>value</code> as attribute value for POC_ID using the alias name PocId.
     * @param value value to set the POC_ID
     */
    public void setPocId(Number value) {
        setAttributeInternal(POCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute BuyerIdNew.
     * @return the BuyerIdNew
     */
    public Number getBuyerIdNew() {
        return (Number) getAttributeInternal(BUYERIDNEW);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BuyerIdNew.
     * @param value value to set the  BuyerIdNew
     */
    public void setBuyerIdNew(Number value) {
        setAttributeInternal(BUYERIDNEW, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CustomerName.
     * @return the CustomerName
     */
    public String getCustomerName() {
        return (String) getAttributeInternal(CUSTOMERNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CustomerName.
     * @param value value to set the  CustomerName
     */
    public void setCustomerName(String value) {
        setAttributeInternal(CUSTOMERNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute StyleNew.
     * @return the StyleNew
     */
    public String getStyleNew() {
        return (String) getAttributeInternal(STYLENEW);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute StyleNew.
     * @param value value to set the  StyleNew
     */
    public void setStyleNew(String value) {
        setAttributeInternal(STYLENEW, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SeasonNew.
     * @return the SeasonNew
     */
    public String getSeasonNew() {
        return (String) getAttributeInternal(SEASONNEW);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SeasonNew.
     * @param value value to set the  SeasonNew
     */
    public void setSeasonNew(String value) {
        setAttributeInternal(SEASONNEW, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> buyer1.
     */
    public RowSet getbuyer1() {
        return (RowSet)getAttributeInternal(BUYER1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> StyleLov1.
     */
    public RowSet getStyleLov1() {
        return (RowSet)getAttributeInternal(STYLELOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> planLov1.
     */
    public RowSet getplanLov1() {
        return (RowSet)getAttributeInternal(PLANLOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> planNumber1.
     */
    public RowSet getplanNumber1() {
        return (RowSet)getAttributeInternal(PLANNUMBER1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> patternLov1.
     */
    public RowSet getpatternLov1() {
        return (RowSet)getAttributeInternal(PATTERNLOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> MNJSeasonLOV1.
     */
    public RowSet getMNJSeasonLOV1() {
        return (RowSet)getAttributeInternal(MNJSEASONLOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> POC_ID_LOV1.
     */
    public RowSet getPOC_ID_LOV1() {
        return (RowSet)getAttributeInternal(POC_ID_LOV1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
